     Header always set Strict-Transport-Security: "max-age=31536000; includeSubDomains"
     Header always set X-Frame-Options "SAMEORIGIN"
     Header set Content-Security-Policy "default-src 'self' 'unsafe-inline' *.google.com *.googleapis.com *.openstreetmap.org *.openstreetmap.fr api.mapbox.com a.tiles.mapbox.com *.gstatic.com blob: data:;"
    
    ProxyPass         /webForm ajp://localhost:8009/surveyMobileAPI/rest/webForm
    ProxyPassReverse  /webForm ajp://localhost:8009/surveyMobileAPI/rest/webForm
    ProxyPass         /app/myWork/webForm ajp://localhost:8009/surveyMobileAPI/rest/webForm
    ProxyPassReverse  /app/myWork/webForm ajp://localhost:8009/surveyMobileAPI/rest/webForm
    
    ProxyPass         /sms ajp://localhost:8009/surveyMobileAPI/rest/sms
    ProxyPassReverse  /sms ajp://localhost:8009/surveyMobileAPI/rest/sms
# Do not pass token attachments to surveyMobileApi
    ProxyPass         /token/attachments !
    ProxyPass         /token ajp://localhost:8009/surveyMobileAPI/rest/token
    ProxyPassReverse  /token ajp://localhost:8009/surveyMobileAPI/rest/token
    ProxyPass         /formList ajp://localhost:8009/surveyMobileAPI/rest/formList
    ProxyPassReverse  /formList ajp://localhost:8009/surveyMobileAPI/rest/formList
    ProxyPass         /formXML ajp://localhost:8009/surveyMobileAPI/rest/formXML
    ProxyPassReverse  /formXML ajp://localhost:8009/surveyMobileAPI/rest/formXML
    ProxyPass         /instanceXML ajp://localhost:8009/surveyMobileAPI/rest/instanceXML
    ProxyPassReverse  /instanceXML ajp://localhost:8009/surveyMobileAPI/rest/instanceXML
    ProxyPass         /submission ajp://localhost:8009/surveyMobileAPI/rest/submission connectiontimeout=60 timeout=600
    ProxyPassReverse  /submission ajp://localhost:8009/surveyMobileAPI/rest/submission
    ProxyPass         /xformsManifest ajp://localhost:8009/surveyMobileAPI/rest/xformsManifest
    ProxyPassReverse  /xformsManifest ajp://localhost:8009/surveyMobileAPI/rest/xformsManifest
    ProxyPass         /resource ajp://localhost:8009/surveyMobileAPI/rest/resource
    ProxyPassReverse  /resource ajp://localhost:8009/surveyMobileAPI/rest/resource
    ProxyPass         /action ajp://localhost:8009/surveyMobileAPI/rest/action
    ProxyPassReverse  /action ajp://localhost:8009/surveyMobileAPI/rest/action
    ProxyPass         /lookup ajp://localhost:8009/surveyMobileAPI/rest/lookup
    ProxyPassReverse  /lookup ajp://localhost:8009/surveyMobileAPI/rest/lookup
    ProxyPass         /login ajp://localhost:8009/surveyMobileAPI/rest/login
    ProxyPassReverse  /login ajp://localhost:8009/surveyMobileAPI/rest/login
    ProxyPass         /custom ajp://localhost:8009/surveyMobileAPI/rest/custom
    ProxyPassReverse  /custom ajp://localhost:8009/surveyMobileAPI/rest/custom

    ProxyPass         /customApi ajp://localhost:8009/customApi/custom
    ProxyPassReverse  /customApi ajp://localhost:8009/customApi/custom
    
    # Set a timeout of 10 minutes on media upload requests
    ProxyPass         /surveyKPI/upload/media ajp://localhost:8009/surveyKPI/rest/upload/media timeout=600
    ProxyPassReverse  /surveyKPI/upload/media ajp://localhost:8009/surveyKPI/rest/upload/media
    ProxyPass         /surveyKPI/assignments/load ajp://localhost:8009/surveyKPI/rest/assignments/load timeout=600
    ProxyPassReverse  /surveyKPI/assignments/load ajp://localhost:8009/surveyKPI/rest/assignments/load

    ProxyPass         /surveyKPI/monitoring ajp://localhost:8009/surveyKPI/monitoring
    ProxyPassReverse  /surveyKPI/monitoring ajp://localhost:8009/surveyKPI/monitoring   
    ProxyPass         /monitoring ajp://localhost:8009/surveyMobileAPI/monitoring
    ProxyPassReverse  /monitoring ajp://localhost:8009/surveyMobileAPI/monitoring
    ProxyPass         /api/monitoring ajp://localhost:8009/koboToolboxApi/monitoring
    ProxyPassReverse  /api/monitoring ajp://localhost:8009/koboToolboxApi/monitoring   
    
    ProxyPass         /surveyKPI ajp://localhost:8009/surveyKPI/rest
    ProxyPassReverse  /surveyKPI ajp://localhost:8009/surveyKPI/rest

    ProxyPass         /api ajp://localhost:8009/koboToolboxApi/api
    ProxyPassReverse  /api ajp://localhost:8009/koboToolboxApi/api

    ErrorDocument 400 "Error: 400 Bad Request"
    ErrorDocument 401 "Error: 401 Unauthorized"
    ErrorDocument 403 "Error: 403 Forbidden"
    ErrorDocument 404 "Error: 404 Not Found"
    ErrorDocument 405 "Error: 405 Method Not Allowed"
    ErrorDocument 408 "Error: 408 Request Timeout"
    ErrorDocument 500 "Error: 500 Internal Server Error"
    ErrorDocument 503 "Error: 503 Service Unavailable"

###################################
# 1. Provide access to home page
# 2. Locations used by form authentication
# 3. GUI access protected by mod auth form
# 4. Basic authentication for API access
# 4.5. No authentication for API v2 access - An API token must be passed in the header api-key
# 5. Basic authentication for Device API
# 6. Locations allowing unauthenticated access
# 7. Special overrides
# 8. Code which does not require authentication
###################################

# 1. Provide access to home page
    <Directory />
    	Require all denied
    </Directory>

    <Directory /var/www/smap>
    	Options FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
	
    # Access to home page
    <Location />
        Require all granted
    </Location>

# 2. Locations used by form authentication

    <Location /login.html>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        ErrorDocument 401 "/inlineLogin.html"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </location>

    <Location /inlineLogin.html>
        Require all granted

        Header Set Pragma "no-cache"
        Header Set Expires "Thu, 1 Jan 1970 00:00:00 GMT"
        Header Set Cache-Control "max-age=0, no-store, no-cache, must-revalidate"
        Header Unset ETag
        FileETag None
    </location>

    <Location /notloggedin.json>
        Require all granted

        Header Set Pragma "no-cache"
        Header Set Expires "Thu, 1 Jan 1970 00:00:00 GMT"
        Header Set Cache-Control "max-age=0, no-store, no-cache, must-revalidate"
        Header Unset ETag
        FileETag None
    </location>

    <Location /authenticate/login.txt>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        #AuthFormLoginRequiredLocation "/login.html"   no logon page just return an error if not logged on

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /dologout.html>
        Require all granted

        SetHandler form-logout-handler
        AuthName smap
        AuthFormLogoutLocation "/logout.html"
        Session On

        SessionMaxAge 1
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /logout.html>
        Require all granted
    </Location>
    
# 3. GUI access protected by mod auth form

    <Location /app>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        ErrorDocument 401 "/inlineLogin.html"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    # Include success location with ajp endpoints to prevent 405 error
    <Location /app/myWork>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        ErrorDocument 401 "/inlineLogin.html"
        AuthFormLoginSuccessLocation "/app/myWork/index.html"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /edit.html>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        ErrorDocument 401 "/inlineLogin.html"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /dashboard>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        ErrorDocument 401 "/inlineLogin.html"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /surveyKPI>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        AuthFormLoginRequiredLocation "/notloggedin.json"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /custom>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        ErrorDocument 401 "/inlineLogin.html"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

    <Location /customApi>
        AuthType Form
        AuthName "smap"
        Require valid-user

        AuthFormProvider dbd
        AuthDBDUserPWQuery "SELECT basic_password FROM users WHERE ident = %s"

        Session on
        AuthFormLoginRequiredLocation "/notloggedin.json"

        SessionMaxAge 6000
        SessionCryptoPassphrase ${SESSPASS}
	SessionCookieName session path=/;SameSite=Strict;httponly;secure;
    </Location>

# 4. Basic authentication for API V1 access

    <Location /api>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
         
        FileETag None
        Header unset ETag
        Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires "Wed, 11 Jan 1984 05:00:00 GMT"
    </Location>

#4.5  No authentication for API version 2 access - A Token must be passed in the header api-key

    <Location /api/v2>
        Require all granted

        FileETag None
        Header unset ETag
        Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires "Wed, 11 Jan 1984 05:00:00 GMT"
    </Location>

# 5. Basic and token based authentication for Device API
    
     <Location /login>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
     </Location>

     <Location /token>
        Require all granted
     </Location>

     <Location /formList>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
     </Location>

    <Location /formXML>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

    <Location /xformsManifest>
	AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
       	Require valid-user
    </Location>

    <Location /resource>
	AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
       	Require valid-user
    </Location>

    # SurveyMobileAPI entry point for webform requests
    <Location /webForm>
	AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
       	Require valid-user
    </Location>

    <Location /submission>
    	AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

    <Location /instanceXML>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>
	
    <Location /lookup>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

    # Access to attachments
    alias /attachments /smap/attachments
    alias /token/attachments /smap/attachments
    alias /app/attachments /smap/attachments
    <Directory /smap/attachments>
        Options FollowSymLinks
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Directory>
        
    <Location /attachments>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

# 6. Locations allowing unauthenticated access

    # Forgotton password
    <Location /app/forgottenPassword.html>
	Require all granted
    </Location>

    <Location /surveyKPI/onetimelogon>
	Require all granted
    </Location>
    
# 7. Special overrides

    # Allow a user to set the basic form of their password if they are only using the legacy digest version
    <Location /app/resetPassword.html>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

    # Check for presence of a basic password
    <Location /surveyKPI/login/basic>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

    # Android device uses myassignments - change this to a surveyMobileAPI request however old fieldTask versions will use this end point for some time
    <Location /surveyKPI/myassignments>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

    # Clean up is done as a batch and uses basic auth
    <Location /surveyKPI/cleanup>
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Location>

# 8. Entry points which do not require authentication

    <Location /sms>
        Require all granted
    </Location>

    <Location /onetimelogon>
      	Require all granted 
    </Location>

    <Location /app/resetForgottonPassword.html>
        Require all granted
    </Location>

    <Location /custom/css>
        Require all granted
    </Location>

    <Location /js>
        Require all granted
    </Location>

    <Location /app/fieldManager/js>
        Require all granted
    </Location>

    <Location /app/myWork/js>
        Require all granted
    </Location>

    <Location /app/myWork/done.html>
        Require all granted
    </Location>

    <Location /sss>
        Require all granted
    </Location>

    <Location /build>
        Require all granted
    </Location>

    <Location /fonts>
        Require all granted
    </Location>

    <Location /webfonts>
        Require all granted
    </Location>

    <Location /images>
        Require all granted
    </Location>

    <Location /favicon.ico>
        Require all granted
    </Location>

    # results submitted with an authentication key
    <Location /submission/key>
        Require all granted
    </Location>

    <Location /surveyKPI/server/version>
        Require all granted
    </Location>

    # Anonymous actions where access is allowed via the UUID in the URL
    <Location /surveyKPI/action>
        Require all granted
        
        FileETag None
        Header unset ETag
        Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires "Wed, 11 Jan 1984 05:00:00 GMT"
    </Location>

    # Access to a form for a temporary user
    <Location /formXML/id>
        Require all granted
    </Location>
    
    # Allow access to webform history page, this may be accessed by a user who does not have logon hence do not require that
    <Location /app/myWork/history.html>
        Require all granted
    </Location>
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

    # Access controlled by a key
    <Location /webForm/key>
      	Require all granted 
    </Location>
    
    <Location /app/myWork/webForm/key>
      	Require all granted 
    </Location>
    
    # Access controlled by a temporary user id
    <Location /webForm/id>
      	Require all granted 
    </Location>
    
    <Location /app/myWork/webForm/id>
      	Require all granted 
    </Location>
    
    # A webform action
    <Location /webForm/action>
      	Require all granted 
    </Location>
    
    <Location /app/myWork/webForm/action>
      	Require all granted 
    </Location>
    
    # Allow access to banner logo without a password
    <Location /custom/banner>
        Require all granted
    </Location>

	# Access with an authentication key
    <Location /surveyKPI/user/details/key>
        Require all granted
    </Location>
    
    <Location /surveyKPI/log/key>
        Require all granted
    </Location>
    
    <Location /surveyKPI/myassignments/key>
    	Require all granted
    </Location>

    <Location /surveyKPI/reports/view>
        Require all granted
    </Location>
    
    # Services which do not require authentication

    # Timezone details
    <Location /surveyKPI/utility/timezones>
	Require all granted
    </Location>


    # Request registration
    <Location /surveyKPI/register>
	Require all granted
    </Location>
	
    # Subscribe - unsubscribe
    <Location /surveyKPI/subscriptions>
	Require all granted
    </Location>
    <Location /app/subscriptions.html>
        Require all granted
    </Location>

    <Location /surveyKPI/reports/oembed.json>
	Require all granted
    </Location>
	
    <Location /surveyKPI/file/id>
	Require all granted
    </Location>

    # Deny access to deprecated services
    <Location /surveyKPI/deprecated>
	Require all denied
    </Location>
	
    # Miscelaneous
    <Location /OpenLayers>
	Require all granted
    </location>
    <Location /fieldManager/js>
	Require all granted
    </location>
	
    # Media files
    alias /media /smap/media
    <Directory /smap/media>
        Options FollowSymLinks
        AuthType Basic
        AuthName "smap"
        AuthBasicUseDigestAlgorithm MD5
        AuthBasicProvider dbd
        AuthDBDUserRealmQuery "select password from users where ident = %s and realm = %s"
        Require valid-user
    </Directory>
	
    <Directory /smap/css>
        Require all granted
    </Directory>


